{"version":3,"sources":["App.js","index.js"],"names":["App","scene","THREE","camera","window","innerWidth","innerHeight","renderer","canvas","document","querySelector","setPixelRatio","devicePixelRatio","setSize","control","OrbitControls","domElement","render","position","setZ","obamaTexture","load","undefined","err","console","log","geometry","material","map","box","light1","obamaTexture1","Array","fill","forEach","star","randFloatSpread","x","y","z","set","add","animate","requestAnimationFrame","rotation","update","className","ReactDOM","StrictMode","getElementById"],"mappings":"sPA6EeA,MAxEf,WAEE,IAAMC,EAAQ,IAAIC,IACZC,EAAS,IAAID,IAAwB,IAAKE,OAAOC,WAAWD,OAAOE,YAAa,GAAK,KACrFC,EAAW,IAAIL,IACnB,CACEM,OAAQC,SAASC,cAAc,SAInCH,EAASI,cAAcP,OAAOQ,kBAE9BL,EAASM,QAAQT,OAAOC,WAAYD,OAAOE,aAE3C,IAAMQ,EAAU,IAAIC,IAAcZ,EAAQI,EAASS,YAEnDT,EAASU,OAAQhB,EAAOE,GAExBA,EAAOe,SAASC,KAAK,IAErB,IAAMC,GAAe,IAAIlB,KAAsBmB,KAAK,0EAAsEC,OAAWA,GAAW,SAACC,GAASC,QAAQC,IAAIF,GAAMC,QAAQC,IAAI,wBAIlLC,EAAW,IAAIxB,IAAqB,IAEpCyB,EAAW,IAAIzB,IAAwB,CAAC0B,IAAKR,IAG7CS,EAAM,IAAI3B,IAAWwB,EAAUC,GAE/BG,EAAS,IAAI5B,IAAmB,OAEhC6B,GAAgB,IAAI7B,KAAsBmB,KAAK,iFA6BrD,OAjBAW,MAAM,KAAKC,OAAOC,SAVlB,WACA,IAAMR,EAAW,IAAIxB,IAAkB,EAAG,EAAG,GACvCyB,EAAW,IAAIzB,IAA2B,CAAC0B,IAAKG,IAEhDI,EAAO,IAAIjC,IAAWwB,EAAUC,GAEtC,EAAgBK,MAAM,GAAGC,OAAOL,KAAI,kBAAM1B,IAAgBkC,gBAAiB,QAA3E,mBAAOC,EAAP,KAASC,EAAT,KAAWC,EAAX,KACAJ,EAAKjB,SAASsB,IAAIH,EAAGC,EAAGC,GACxBtC,EAAMwC,IAAIN,MAMVlC,EAAMwC,IAAIZ,EAAKC,GACf,SAASY,IACPC,sBAAuBD,GAEvBb,EAAIe,SAASP,GAAK,IAClBR,EAAIe,SAASN,GAAK,KAClBT,EAAIe,SAASL,GAAK,IAClBzB,EAAQ+B,SAEVtC,EAASU,OAAQhB,EAAOE,GAGxBuC,GAEE,qBAAKI,UAAU,MAAf,SAEE,wBAAQA,UAAU,kBCjExBC,IAAS9B,OACP,cAAC,IAAM+B,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASwC,eAAe,W","file":"static/js/main.2313c94b.chunk.js","sourcesContent":["import './App.css';\nimport * as THREE from 'three'\n\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\n\nfunction App() {\n\n  const scene = new THREE.Scene()\n  const camera = new THREE.PerspectiveCamera(100, window.innerWidth/window.innerHeight, 0.1, 1000)\n  const renderer = new THREE.WebGLRenderer(\n    {\n      canvas: document.querySelector('#bg')\n    }\n  )\n  \n  renderer.setPixelRatio(window.devicePixelRatio)\n\n  renderer.setSize(window.innerWidth, window.innerHeight)\n\n  const control = new OrbitControls(camera, renderer.domElement)\n\n  renderer.render( scene, camera)\n\n  camera.position.setZ(30)\n\n  const obamaTexture = new THREE.TextureLoader().load('https://pbs.twimg.com/media/ETAi5IJXkAA7mre?format=jpg&name=medium' ,undefined, undefined, (err) => {console.log(err); console.log(\"an error happened\")})\n  \n  // console.log(obamaTexture)\n\n  const geometry = new THREE.SphereGeometry(10)\n\n  const material = new THREE.MeshBasicMaterial({map: obamaTexture})\n  // console.log(material)\n\n  const box = new THREE.Mesh(geometry, material)\n\n  const light1 = new THREE.AmbientLight(0xffff)\n\n  const obamaTexture1 = new THREE.TextureLoader().load('https://pbs.twimg.com/profile_images/1329647526807543809/2SGvnHYV_400x400.jpg')\n\n  function addStar() {\n  const geometry = new THREE.BoxGeometry(2, 2, 2)\n  const material = new THREE.MeshStandardMaterial({map: obamaTexture1})\n\n  const star = new THREE.Mesh(geometry, material)\n\n  const [x,y,z] = Array(3).fill().map(() => THREE.MathUtils.randFloatSpread( 100 ))\n  star.position.set(x, y, z)\n  scene.add(star)\n}\n  Array(200).fill().forEach(addStar)\n \n  // const gridHelper = new THREE.GridHelper(100, 100, new THREE.Color(0x000000), new THREE.Color(0x000000) )\n  // scene.add(gridHelper)\n  scene.add(box, light1)\n  function animate() {\n    requestAnimationFrame( animate) ;\n\n    box.rotation.x += 0.01\n    box.rotation.y += 0.005\n    box.rotation.z += 0.01;\n    control.update()\n  \n  renderer.render( scene, camera)\n  }\n\n  animate()\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}