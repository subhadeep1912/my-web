{"version":3,"sources":["App.js","index.js"],"names":["App","scene","THREE","camera","window","innerWidth","innerHeight","renderer","canvas","document","querySelector","setPixelRatio","devicePixelRatio","setSize","control","OrbitControls","domElement","render","position","setZ","geometry","material","color","box","light1","gridHelper","add","animate","requestAnimationFrame","rotation","x","y","z","update","className","ReactDOM","StrictMode","getElementById"],"mappings":"6OAkDeA,MA9Cf,WAEE,IAAMC,EAAQ,IAAIC,IACZC,EAAS,IAAID,IAAwB,IAAKE,OAAOC,WAAWD,OAAOE,YAAa,GAAK,KACrFC,EAAW,IAAIL,IACnB,CACEM,OAAQC,SAASC,cAAc,SAInCH,EAASI,cAAcP,OAAOQ,kBAC9BL,EAASM,QAAQT,OAAOC,WAAYD,OAAOE,aAC3C,IAAMQ,EAAU,IAAIC,IAAcZ,EAAQI,EAASS,YACnDT,EAASU,OAAQhB,EAAOE,GACxBA,EAAOe,SAASC,KAAK,IACrB,IAAMC,EAAW,IAAIlB,IAAkB,GAAI,GAAI,IACzCmB,EAAW,IAAInB,IAA2B,CAACoB,MAAO,WAClDC,EAAM,IAAIrB,IAAWkB,EAAUC,GAC/BG,EAAS,IAAItB,IAAmB,OACvB,IAAIA,IAAiB,OAC7BgB,SAASC,KAAK,EAAE,EAAE,IACzB,IAAMM,EAAa,IAAIvB,IAAiB,IAAK,KAe7C,OAbAD,EAAMyB,IAAIH,EAAKC,EAAQC,GACvB,SAASE,IACPC,sBAAuBD,GAEvBJ,EAAIM,SAASC,GAAK,IAClBP,EAAIM,SAASE,GAAK,KAClBR,EAAIM,SAASG,GAAK,IAClBlB,EAAQmB,SAEV1B,EAASU,OAAQhB,EAAOE,GAGxBwB,GAEE,qBAAKO,UAAU,MAAf,SAEE,wBAAQA,UAAU,kBCtCxBC,IAASlB,OACP,cAAC,IAAMmB,WAAP,UACE,cAAC,EAAD,MAEF3B,SAAS4B,eAAe,W","file":"static/js/main.cb674c23.chunk.js","sourcesContent":["import './App.css';\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\n\nfunction App() {\n\n  const scene = new THREE.Scene()\n  const camera = new THREE.PerspectiveCamera(100, window.innerWidth/window.innerHeight, 0.1, 1000)\n  const renderer = new THREE.WebGLRenderer(\n    {\n      canvas: document.querySelector('#bg')\n    }\n  )\n\n  renderer.setPixelRatio(window.devicePixelRatio)\n  renderer.setSize(window.innerWidth, window.innerHeight)\n  const control = new OrbitControls(camera, renderer.domElement)\n  renderer.render( scene, camera)\n  camera.position.setZ(30)\n  const geometry = new THREE.BoxGeometry(10, 10, 10)\n  const material = new THREE.MeshStandardMaterial({color: 0xff3423})\n  const box = new THREE.Mesh(geometry, material)\n  const light1 = new THREE.AmbientLight(0xffff)\n  const light2 = new THREE.PointLight(0xffff)\n  light2.position.setZ(0,0,30)\n  const gridHelper = new THREE.GridHelper(100, 100)\n\n  scene.add(box, light1, gridHelper)\n  function animate() {\n    requestAnimationFrame( animate) ;\n\n    box.rotation.x += 0.01\n    box.rotation.y += 0.005\n    box.rotation.z += 0.01;\n    control.update()\n  \n  renderer.render( scene, camera)\n  }\n\n  animate()\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}